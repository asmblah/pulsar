// -----------------------------------------------------------------------------
//  20/02/2016
//
//  Styles for a filters component which never saw light of day, originally
//  written by Adam for the first incarnation of Q.
//
//  _component.filters.scss
//  _component.filter.scss
// -----------------------------------------------------------------------------

.form--horizontal .form__group {
  > .control__label + .checkbox {
    display: inline-block;
    margin-left: 0;
    width: 65%;
  }
  > .checkbox--multi {
    padding-top: 9px;
    .checkbox__label {
      margin: 0;
      text-align: left;
      width: 100%;
      input {
        margin-left: 0;
      }
    }
  }
  .form__collection {
    ul {
      list-style: none;
      margin-bottom: 0;
    }
    li {
      margin-bottom: $padding-small-vertical;
      position: relative;
    }
    .form__control {
      padding-right: $padding-base-horizontal * 3;
    }
    .remove__control {
      color: color(gray, light);
      margin-top: - $input-height-base / 4;
      position: absolute;
      right: $padding-base-horizontal;
      text-decoration: none;
      top: 50%;
      &:hover {
        color: color(danger);
      }
    }
  }
}

tr.filters {
  .label {
    text-transform: none;
    user-select: none;
    cursor: pointer;
  }
  [data-filter-type="multi"]:hover {
    cursor: pointer;
  }
  .actions {
    [data-filter-action="done"],
    [data-filter-action="save-as"] {
      // display: none;
    }
  }
  &.edit {
    .actions {
      float: right;

      [data-filter-action="add"] {
        display: none;
      }
      [data-filter-action="done"],
      [data-filter-action="save"] {
        display: inline;
      }
    }
    [data-filter-action="clear-all"] {
      margin-right: -25px;
    }
  }
}

tr.is-collapsed {

  td, th {
    border: none;
    height: 0;

    > div {
      height: 0;
      overflow: hidden;
    }
  }
}

.filter {
    display: none; // filters shouldn't be visible on load
    text-align: center;

    .form__group:hover {
        box-shadow: none;
    }
}

.popover__content > .filter {
    display: block; // show the filter content when it's inside a popover
}

[data-popover-content] + .popover {
    max-width: 500px;
}

tr.filters {
    th:nth-of-type(2) {
        padding: 0 10px 0 0;
    }

    .label {
        position: relative;
        top: -2px;
    }

    [data-filter-action="clear-all"] {
        float: right;
    }
}

[data-daterange]:hover {
    cursor: pointer;
}

// -----------------------------------------------------------------------------
//  10/11/2015
//
//  Old direct variable names, mapped to current colour palette.
//
//  _component.colours.scss
// -----------------------------------------------------------------------------

$jadu-blue-principle:           color(jadu-blue, darker);
$jadu-blue-secondary:           color(jadu-blue);
$jadu-blue-cool:                color(jadu-blue, light);
$jadu-blue-warm:                color(jadu-blue);
$jadu-blue-pale:                color(jadu-blue, pale);
$jadu-blue:                     color(jadu-blue);

$jadu-orange:                   #fcb130;
$jadu-green:                    color(jadu-green);
$jadu-teal:                     color(jadu-teal);
$jadu-red:                      color(jadu-red);
$jadu-yellow:                   #ffcc33;
$jadu-black:                    color(black);
$jadu-copy-gray:                color(gray, dark);

$black:                         color(black);
$blue:                          color(jadu-blue);
$blue-light:                    color(jadu-blue, light);
$gray-darker:                   color(gray, darker);
$gray-dark:                     color(gray, dark);
$gray:                          color(gray);
$gray-light:                    color(gray, light);
$gray-lighter:                  color(gray, lighter);
$green:                         color(jadu-green);
$off-white:                     color(gray, off-white);
$white:                         color(white);

$accent-color:                  color(jadu-blue);
$accent-color-alt:              color(white);

$text-color:                    color(text);
$link-color:                    color(jadu-blue);
$link-hover-color:              darken($blue, 20%);
$inverse-link-color:            $white;
$inverse-link-hover-color:      darken($white, 10%);

$base-color:                    $gray;
$primary-color:                 #1F7BB8;
$success-color:                 #297C46;
$warning-color:                 #EAA96A;
$danger-color:                  #C84D40;
$info-color:                    $jadu-blue-cool;
$inverse-color:                 $gray-dark;

$base-color-alt:                $black;
$primary-color-alt:             #FFFFFF;
$success-color-alt:             #FFFFFF;
$warning-color-alt:             #000000;
$danger-color-alt:              #FFFFFF;
$info-color-alt:                #000000;
$inverse-color-alt:             #FFFFFF;

$state-colors: ('base', $base-color, $base-color-alt),
               ('primary', $primary-color, $primary-color-alt),
               ('success', $success-color, $success-color-alt),
               ('warning', $warning-color, $warning-color-alt),
               ('danger', $danger-color, $danger-color-alt),
               ('info', $info-color, $info-color-alt),
               ('inverse', $inverse-color, $inverse-color-alt);

// -----------------------------------------------------------------------------
//  09/11/2015
//
//  _component.notifications.scss
// -----------------------------------------------------------------------------

$accent-color: 'f00';
$accent-color-alt: 'f00';
$toolbar-notification-item-hover: '#f00';

.notifications {
  color: $accent-color-alt;
  // margin-right: $gutter-width / 2;
  max-width: 300px;
  position: relative;
  top: 5px;

  .btn {
    background: none;
    box-shadow: none;
    border: none;
    color: color(white);
    text-shadow: none;

    > .badge {
      margin: -3px 0 -1px;
    }
  }

  .btn:hover {
    background-color: rgba(0, 0, 0, .2);
    background-image: none;
    box-shadow: none;
  }

  h1 {
    float: left;
    font-size: $font-size-large;
    line-height: $line-height-large;
    margin: 0 0 0 ($gutter-width / 2);
  }

  small {
    color: color(gray, light);
  }

  @include respond-min($screen-phone) {
    // margin-right: $gutter-width;
  }

  .dropdown__menu {
    max-height: 75vh;
    overflow: hidden;
    overflow-y: scroll;
  }
}

.notifications__header {
  padding-bottom: 40px;
}


// very specific to overcome dropdown specifics
.dropdown__menu > li > a.notifications__dismiss {
  color: $accent-color-alt;
  float: right;
  padding-right: $gutter-width / 2;
  text-decoration: none;

  &:hover {
    color: $accent-color;
  }
}

.notification {
  border-bottom: 1px solid color(gray, lighter);
  display: block;
  float: left;
  width: 100%;

  > a,
  > a > i,
  > a > img {
    float: left;
  }

  > a {
    width: 100%;
  }
}

.notification__title {
  font-family: $font-family-regular;
  margin-bottom: 0;

  .dropdown__menu > li & > i {
    margin: 0 2px 0 -4px;
  }
}

.notification__time {
  float: right;
  font-size: $font-size-small;
}

.notification__description {
  margin-left: 25px;
}

.notification__description {
  margin-bottom: 0;
}

.dropdown__menu > li {
  &:hover > .badge {
    @extend .badge--primary;
    background-color: darken($dropdown-link-active-bg, 20%);
  }
  &.notification--primary a {
    background-color: color(primary);
    color: color(white);
    &:hover {
      background-color: $toolbar-notification-item-hover;
      color: $accent-color;
    }
    > .badge {
      @extend .badge--primary;
      background-color: darken($badge-primary-bg, 20%);
    }
  }
  &.notification--success a {
    background-color: color(success);
    color: color(white);
    &:hover {
      background-color: $toolbar-notification-item-hover;
      color: color(success);
    }
    > .badge {
      @extend .badge--success;
      background-color: darken($badge-success-bg, 20%);
    }
  }
  &.notification--warning a {
    background-color: color(warning);
    color: color(white);
    &:hover {
      background-color: $toolbar-notification-item-hover;
      color: color(warning);
    }
    > .badge {
      @extend .badge--warning;
      background-color: darken($badge-warning-bg, 20%);
    }
  }
  &.notification--info a {
    background-color: color(info);
    color: color(white);
    &:hover {
      background-color: $toolbar-notification-item-hover;
      color: color(info);
    }
    > .badge {
      @extend .badge--info;
      background-color: darken($badge-info-bg, 20%);
    }
  }
  &.notification--danger a {
    background-color: color(danger);
    color: color(white);
    &:hover {
      background-color: $toolbar-notification-item-hover;
      color: color(danger);
    }
    > .badge {
      @extend .badge--danger;
      background-color: darken($badge-danger-bg, 20%);
    }
  }
  &.notification--inverse a {
    background-color: color(inverse);
    color: color(white);
    &:hover {
      background-color: $toolbar-notification-item-hover;
      color: color(inverse);
    }
    > .badge {
      @extend .badge--inverse;
      background-color: darken($badge-inverse-bg, 20%);
    }
  }
}
