// -----------------------------------------------------------------------------
//  20/02/2016
//
//  Styles for a filters component which never saw light of day, originally
//  written by Adam for the first incarnation of Q.
//
//  _component.filters.scss
//  _component.filter.scss
// -----------------------------------------------------------------------------

.form--horizontal .form__group {
  > .control__label + .checkbox {
    display: inline-block;
    margin-left: 0;
    width: 65%;
  }

  > .checkbox--multi {
    padding-top: 9px;

    .checkbox__label {
      margin: 0;
      text-align: left;
      width: 100%;

      input {
        margin-left: 0;
      }
    }
  }

  .form__collection {
    ul {
      list-style: none;
      margin-bottom: 0;
    }

    li {
      margin-bottom: $padding-small-vertical;
      position: relative;
    }

    .form__control {
      padding-right: $padding-base-horizontal * 3;
    }

    .remove__control {
      color: color(gray, light);
      margin-top: - $input-height-base / 4;
      position: absolute;
      right: $padding-base-horizontal;
      text-decoration: none;
      top: 50%;

      &:hover {
        color: color(danger);
      }
    }
  }
}

tr.filters {
  .label {
    text-transform: none;
    user-select: none;
    cursor: pointer;
  }

  [data-filter-type="multi"]:hover {
    cursor: pointer;
  }

  .actions {
    [data-filter-action="done"],
    [data-filter-action="save-as"] {
      // display: none;
    }
  }

  &.edit {
    .actions {
      float: right;

      [data-filter-action="add"] {
        display: none;
      }

      [data-filter-action="done"],
      [data-filter-action="save"] {
        display: inline;
      }
    }

    [data-filter-action="clear-all"] {
      margin-right: -25px;
    }
  }
}

tr.is-collapsed {

  td,
  th {
    border: 0;
    height: 0;

    > div {
      height: 0;
      overflow: hidden;
    }
  }
}

.filter {
    display: none; // filters shouldn't be visible on load
    text-align: center;

    .form__group:hover {
        box-shadow: none;
    }
}

.popover__content > .filter {
    display: block; // show the filter content when it's inside a popover
}

[data-popover-content] + .popover {
    max-width: 500px;
}

tr.filters {
    th:nth-of-type(2) {
        padding: 0 10px 0 0;
    }

    .label {
        position: relative;
        top: -2px;
    }

    [data-filter-action="clear-all"] {
        float: right;
    }
}

[data-daterange]:hover {
    cursor: pointer;
}

// -----------------------------------------------------------------------------
//  10/11/2015
//
//  Old direct variable names, mapped to current colour palette.
//
//  _component.colours.scss
// -----------------------------------------------------------------------------

$jadu-blue-principle:           color(jadu-blue, darker);
$jadu-blue-secondary:           color(jadu-blue);
$jadu-blue-cool:                color(jadu-blue, light);
$jadu-blue-warm:                color(jadu-blue);
$jadu-blue-pale:                color(jadu-blue, pale);
$jadu-blue:                     color(jadu-blue);

$jadu-orange:                   #fcb130;
$jadu-green:                    color(jadu-green);
$jadu-teal:                     color(jadu-teal);
$jadu-red:                      color(jadu-red);
$jadu-yellow:                   #fc3;
$jadu-black:                    color(black);
$jadu-copy-gray:                color(gray, dark);

$black:                         color(black);
$blue:                          color(jadu-blue);
$blue-light:                    color(jadu-blue, light);
$gray-darker:                   color(gray, darker);
$gray-dark:                     color(gray, dark);
$gray:                          color(gray);
$gray-light:                    color(gray, light);
$gray-lighter:                  color(gray, lighter);
$green:                         color(jadu-green);
$off-white:                     color(gray, off-white);
$white:                         color(white);

$accent-color:                  color(jadu-blue);
$accent-color-alt:              color(white);

$text-color:                    color(text);
$link-color:                    color(jadu-blue);
$link-hover-color:              darken($blue, 20%);
$inverse-link-color:            $white;
$inverse-link-hover-color:      darken($white, 10%);

$base-color:                    $gray;
$primary-color:                 #1f7bb8;
$success-color:                 #297c46;
$warning-color:                 #eaa96a;
$danger-color:                  #cb4d40;
$info-color:                    $jadu-blue-cool;
$inverse-color:                 $gray-dark;

$base-color-alt:                $black;
$primary-color-alt:             #fff;
$success-color-alt:             #fff;
$warning-color-alt:             #000;
$danger-color-alt:              #fff;
$info-color-alt:                #000;
$inverse-color-alt:             #fff;

$toolbar-bg-hover:              #f00;

$state-colors: ('base', $base-color, $base-color-alt),
               ('primary', $primary-color, $primary-color-alt),
               ('success', $success-color, $success-color-alt),
               ('warning', $warning-color, $warning-color-alt),
               ('danger', $danger-color, $danger-color-alt),
               ('info', $info-color, $info-color-alt),
               ('inverse', $inverse-color, $inverse-color-alt);


/* -------------------------------------------------------------------------- *\
	30/07/2015

	_component.table.scss

	Old table alignment classes
\* -------------------------------------------------------------------------- */

.row--align-top {
  th,
  td {
    vertical-align: top;
  }
}

.row--align-middle {
  th,
  td {
    vertical-align: middle;
  }
}

/* -------------------------------------------------------------------------- *\
    12/08/2015

    _tabs.scss

    Old on page tabs (used in file uploads in the Q CC)
\* -------------------------------------------------------------------------- */
.tabs__container {
    .tabs__list {
      clear: left;

      @include ie-lte(8) {
        display: block;
      }

      float: left;
      list-style: none;
      margin: 0;
      padding: 0;
      width: $tab-column-width;

      @include respond-max($screen-tablet-max) {
        width: $tab-column-width-tablet;
      }

      &[data-mobile-togglable] {
        background-color: $accent-color;
        border-left: $toolbar-accent-height solid $accent-color;
        display: block;
        height: 100%;
        margin-right: -$tab-column-width-mobile;
        overflow-y: auto;
        position: fixed;
        right: 0;
        top: 0;
        -webkit-transition: margin-right .15s ease-out;
        -moz-transition: margin-right .15s ease-out;
        -transition: margin-right .15s ease-out;
        z-index: $zindex-nav;
        width: $tab-column-width-mobile;

        &.toggled {
          margin-right: 0;
        }
      }

      @include respond-min($screen-tablet) {
        display: block;
      }

      > li {
        margin-bottom: -1px;
      }

      &[data-mobile-togglable] > li,
      &[data-mobile-togglable] > li > .tabs__list > li {
        margin-bottom: 0;
      }

      > li > a {
        border: 1px solid transparent;
        color: $black;
        display: block;
        line-height: $line-height-base * 1.75;

        @include ie-lte(7) {
          height: $line-height-base * 1.75;
        }

        padding: 0 $gutter-width / 2;
        text-decoration: none;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        > .label {
          margin-left: .5em;
          position: relative;
          top: -1px;
        }

        > i {
          display: inline-block;
          font-size: 14px;
          opacity: .6;
          text-align: center;
          margin-right: 3px;
          width: 14px;

          @include ie-lte(7) {
            margin-right: 6px;
          }
        }

        &:hover {
          background-color: $gray-lighter;

          > i {
            opacity: 1;
          }
        }
      }

      &[data-mobile-togglable] > li > a {
        color: $accent-color-alt;
        border: 0;

        &:hover {
          color: $accent-color;
          background-color: $accent-color-alt;
        }
      }

      > li.is-open > a {
        outline: 1px solid red;
      }

      > li.is-active > a {
        background-color: $white;
        border: 1px solid $gray;
        border-right: 0;
        z-index: 1;

        &:hover {
          background-color: $gray-lighter;
        }
      }

      &[data-mobile-togglable] > li.is-active > a {
        background-color: $accent-color;
        border: 0;
        border-bottom: 2px solid $accent-color-alt;
        color: $accent-color-alt;

        i {
          opacity: 1;
        }
      }
    }

    // horizontal navigation
    .tabs__list.tabs--horizontal {
      margin: 0;
      position: relative;
      width: auto;
      z-index: $zindex-dropdown;

      > li {
        float: left;
      }

      > li > a:hover {
        z-index: -1;
      }

      > li.is-active > a {
        border: 1px solid $gray;
        border-bottom: 0;
      }

      + .tabs__content {
        border: 1px solid $gray;
        clear: left;
        position: relative;
        top: -1px;

        > .tab__pane {
          padding: $line-height-base 0;
        }
      }
    }

    // nested navigation
    .tabs__list > li > .tabs__list {
      background-color: $white;
      border-bottom: 1px solid $gray;
      border-left: 1px solid $gray;
      padding-bottom: 1px;
      display: none;
      float: none;
      width: 100%;

      > li.is-active > a {
        background-color: $gray-lighter;
        border-color: transparent;

        &:hover {
          background-color: $gray-lighter;
        }
      }
    }

    .tabs__list[data-mobile-togglable] > li > .tabs__list {
      background-color: $accent-color;
      border: 0;
      padding: 0;

      > li > a {
        border: 0;
        color: $accent-color-alt;

        &:hover {
          background-color: $accent-color;
          color: $white;
        }
      }

      > li.is-active > a {
        background-color: $accent-color-alt;
        color: $accent-color;

        i {
          opacity: 1;
        }
      }
    }

    .tabs__list .is-active > .tabs__list {
      display: block;
    }

    .tabs__content {
      display: block;
      overflow: auto;

      @include respond-max($screen-tablet) {
        position: relative;
        top: -($line-height-base * 2.5);
      }

      // show/hide tab panes
      > .tab__pane {
        display: none;

        &.is-active {
          display: block;
        }
      }
    }

    .tab__pane form {
      // make sure forms in tabs don't add extra spacing after the form actions
      margin-bottom: 0;
      width: 100%;
    }

    .tab__inner {
      background-color: $white;
      border-top: 1px solid $gray;
      border-bottom: 1px solid $gray;
      float: left;
      position: relative;
      width: 100%;

      h2:first-of-type {
        margin-top: 0;
      }

      @include respond-min($screen-phone) {
        border: 1px solid $gray;
      }
    }

    .tab__main {
      overflow: hidden;
      width: 100%;

      @include respond-min($screen-desktop) {
        border-right: 1px solid $gray;
        padding-right: $gutter-width;
        width: auto;
      }
    }

    .tab__sidebar {
      border-bottom: 1px solid $gray;
      float: left;
      padding: 0;
      margin-bottom: $line-height-base;
      position: relative;
      vertical-align: top;
      width: 100%;

      @include respond-min($screen-desktop) {
        border-bottom: 0 none;
        border-left: 1px solid $gray;
        float: right;
        left: -1px; // match left border with that of .tab__main
        margin-bottom: 0;
        padding: $line-height-base 0 $line-height-base $gutter-width;
        width: 25%;
      }
    }

    .tab--unpadded > p {
      clear: both;
      margin-left: $gutter-width;
    }

    .tab--padded {
      padding: $line-height-base $gutter-width;
    }

    .tabs {
      display: inline-block;
      height: 100%;
      margin-bottom: 3.2em;
      position: relative;
      width: 100%;
    }

    .tabs__list > li > a[data-show="#new-tab"] {
      @extend .muted;
      text-align: center;

      &:hover {
        color: $gray-dark;
      }
    }

    .tabs__list .new {
      background-color: $primary-color;
      border-bottom: 0;
      height: $line-height-base * 1.75;

      input {
        background-color: $primary-color;
        border: 0;
        outline: none;
        color: $white;
        line-height: 1.75em;
        margin: 4px 0 0 5%;
        width: 90%;

        &::selection {
          background: white;
        }
      }
    }
}

