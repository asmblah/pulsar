/**
 * -----------------------------------------------------------------------------
 *  deck.less
 * -----------------------------------------------------------------------------
 */

.deck {
  bottom: 0;
  display: none; /* Hide decks by default */
  left: -2%;
  position: absolute;
  right: 0;
  top: 144px;
  z-index: 1;

  @include respond-min($screen-phone) {
    left: 0;
    top: 89px;
  }

  @include respond-min($screen-tablet) {
    left: 11%;
    top: 78px;
  }
}

.deck.active {
  display: block;
  z-index: 1;
}

// Standard [X] control to close individual deck slides
.deck .close {
  position: absolute;
  right: $line-height-base / 2;
  top: $line-height-base / 2;
  z-index: 2;
}

.slide {
  display: none;
  padding-bottom: 60px;
  position: absolute;
  right: 0;

  // Control the horizontal position of successive deck slides ---------------

  $left-offset: 20px;
  $right-offset: 2px;

  // IE8 Currently has issues supporting nth-of-type and nth-child which is the
  // reason the following abomination exists. Please don't judge me.

  & {
  // &:nth-of-type(1)  {
    left: $left-offset * 1;
    right: $right-offset * 1;
    z-index: 1;
  }

  & + & {
  // &:nth-of-type(2)  {
    left: $left-offset * 2;
    right: $right-offset * 2;
    z-index: 2;
  }

  & + & + & {
  // &:nth-of-type(3)  {
    left: $left-offset * 3;
    right: $right-offset * 3;
    z-index: 3;
  }

  & + & + & + & {
  // &:nth-of-type(4)  {
    left: $left-offset * 4;
    right: $right-offset * 4;
    z-index: 4;
  }

  & + & + & + & + & {
  // &:nth-of-type(5)  {
    left: $left-offset * 5;
    right: $right-offset * 5;
    z-index: 5;
  }

  & + & + & + & + & + & {
  // &:nth-of-type(6)  {
    left: $left-offset * 6;
    right: $right-offset * 6;
    z-index: 6;
  }

  & + & + & + & + & + & + & {
  // &:nth-of-type(7)  {
    left: $left-offset * 7;
    right: $right-offset * 7;
    z-index: 7;
  }

  & + & + & + & + & + & + & + & {
  // &:nth-of-type(8)  {
    left: $left-offset * 8;
    right: $right-offset * 8;
    z-index: 8;
  }

  & + & + & + & + & + & + & + & + & {
  // &:nth-of-type(9)  {
    left: $left-offset * 9;
    right: $right-offset * 9;
    z-index: 9;
  }

  & + & + & + & + & + & + & + & + & + & {
  // &:nth-of-type(n + 11) {
    left: $left-offset * 10;
    right: $right-offset * 10;
    z-index: 10;
  }
  // -------------------------------------------------------------------------
}

.slide-inner {
  background-color: color(white);
  box-shadow: -3px 0 3px rgba(0, 0, 0, .1);
  float: left;
  width: 100%;

  form {
    padding-top: 0;
    width: 100%;
  }

  @include ie-lte(8) {
      border: 1px solid color(gray);
  }

  &.padded {
    padding: $gutter-width $gutter-width 0 $gutter-width;
  }

  & {
  // &:nth-of-type(1)  {
      box-shadow: 0 5px 10px rgba(0,0,0,.7);
  }

  & + & + & + & + & + & + & + & + & + & + & + & {
  // &:nth-of-type(n + 12) {
      box-shadow: none;
  }

  .pager {
    margin-top: 0;
    text-align: left;
  }

  .table-scrollable {
    margin: $line-height-base 0 $line-height-base $gutter-width;
    max-height: 500px;

    tr:first-of-type td {
      border-top: 0;
    }
  }

  table input[type="checkbox"],
  table input[type="radio"] {
    margin-top: -5px;
  }

  .nav-tabs {
    border-bottom: 1px solid color(white);
  }

  .nav-tabs > li > a {
    border: 0;
    border-radius: 0;
  }

  .nav-tabs > .active > a {
    background-color: color(gray, lighter);
    border: 0;
  }

  .nav-tabs > .active > a:hover {
    text-decoration: none;
  }

  .tab-content {
    border: 0;
  }

  &.padded .form__actions {
    margin-left: -20px;
    margin-right: -20px;
  }

}

.slide__title,
.slide legend {
  border-bottom: 1px solid color(gray, lighter);
  line-height: 1.5em;
  margin: 0 0 .5em 0;
  padding-top: 24px;
}

// Define the animated transition when the .deck-background class is added and removed
.nav-tabs,
.tab-pane,
.tab-content,
.btn-toolbar,
.slide {
  opacity: 1;
  -o-transition: opacity .2s ease-in-out;
  -ms-transition: opacity .2s ease-in-out;
  -moz-transition: opacity .2s ease-in-out;
  -webkit-transition: opacity .2s ease-in-out;
  transition: opacity .2s ease-in-out;
}

// The styles applied to background elements to reduce their visual prominence
.deck-background {
  opacity: 0.5;
}

// Inverse deck styles for a white-on-black look
.deck-inverse {
  color: color(gray, lighter);

  .slide {
    border: 1px solid darken(#333, 5%);
    form,
    h1,
    legend {
      background-color: #333;
      border-bottom: 1px solid #222;
      color: color(gray, lighter);
      text-shadow: 0 -1px 0 rgba(0, 0, 0, 1);
    }
  }

  .slide .form-actions {
    background-color: #111;
    border: 0;
    border-top: 1px solid #333;
  }

  .documentation {
    text-shadow: 0 -1px 0 rgba(0, 0, 0, .9);
  }

  // The inverse label style is the same as the colour we're using for inverse
  // deck styles, so we make this a touch darker to compensate.
  .label-inverse {
    background-color: #222;
  }

  a {
    color: color(white);
  }
}
