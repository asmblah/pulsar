@import '_function.merge-maps';
@import '_function.color';

/* -------------------------------------------------------------------------- *\
    Base palettes

    Defines what value a specific named colour should be. Used in conjunction
    with _config.theme.scss to defined how specific Jadu control centre elements
    should be styled in regards to colour.
\* -------------------------------------------------------------------------- */

$palette-branding: (
    'jadu-blue-principle':  #3399cc,
    'jadu-blue-secondary':  #2080c0,
    'jadu-blue-cool':       #a0cdef,
    'jadu-blue-warm':       #a4c2cd,
    'jadu-blue-pale':       #e0f3f9,
    'jadu-blue':            #3399cc,
    'jadu-orange':          #fcb130,
    'jadu-green':           #89b029,
    'jadu-teal':            #06a79d,
    'jadu-red':             #d12918,
    'jadu-yellow':          #ffcc33,
    'jadu-black':           #1e1e1e,
    'jadu-copy-gray':       #989699
);

$palette-monochromes: (
    'black':                #1e1e1e,
    'gray-darker':          #404040,
    'gray-dark':            #4d4d4d,
    'gray':                 #cccccc,
    'gray-light':           #dfdfdf,
    'gray-lighter':         #f2f2f2,
    'off-white':            #fafafa,
    'white':                #ffffff
);

/* -------------------------------------------------------------------------- *\
    Text and links
\* -------------------------------------------------------------------------- */

$palette-text: (
    'text-color':           map-get($palette-monochromes, 'jadu-copy-gray'),
    'text-color-light':     map-get($palette-monochromes, 'gray'),
    'link-color':           map-get($palette-branding, 'jadu-blue-secondary'),
    'link-hover-color':     map-get($palette-branding, 'jadu-blue-secondary'),
    'inverse-link-color':   #ffffff,
    'inverse-link-color-hover': darken(#ffffff, 10%)
);

/* -------------------------------------------------------------------------- *\
    States

    The colour and its alternate MUST meet WCAG 2.0 AA compliance for contrast
\* -------------------------------------------------------------------------- */

$palette-states: (
    'base':           map_get($palette-monochromes, 'gray'),
    'primary':        #1f7bb8,
    'success':        #297c46,
    'warning':        #eaa96a,
    'danger':         #c84d40,
    'info':           map_get($palette-branding, 'jadu-blue-cool'),
    'inverse':        map_get($palette-monochromes, 'gray-dark'),
    'base-alt':       map_get($palette-monochromes, 'black'),
    'primary-alt':    #ffffff,
    'success-alt':    #ffffff,
    'warning-alt':    #000000,
    'danger-alt':     #ffffff,
    'info-alt':       #000000,
    'inverse-alt':    #ffffff
);

/* -------------------------------------------------------------------------- *\
    Combined States

    Loop over this using:

    @each $state, $state-color, $state-color-alt in $state-colors { ... }
\* -------------------------------------------------------------------------- */

$state-colors:
    ('base', map_get($palette-states, 'base'), map_get($palette-states, 'base-alt')),
    ('primary', map_get($palette-states, 'primary'), map_get($palette-states, 'primary-alt')),
    ('success', map_get($palette-states, 'success'), map_get($palette-states, 'success-alt')),
    ('warning', map_get($palette-states, 'warning'), map_get($palette-states, 'warning-alt')),
    ('danger', map_get($palette-states, 'danger'), map_get($palette-states, 'danger-alt')),
    ('info', map_get($palette-states, 'info'), map_get($palette-states, 'info-alt')),
    ('inverse', map_get($palette-states, 'inverse'), map_get($palette-states, 'inverse-alt'));

/* -------------------------------------------------------------------------- *\
    Colour maps

    Use in conjunction with _mixin.colour.scss to reference colours in your
    stylesheets without needing to use map_get and reference a palette.

    Example:

    background-color: colour('gray-light');
\* -------------------------------------------------------------------------- */

$colors: merge-maps(
    $palette-branding,
    $palette-monochromes,
    $palette-text,
    $palette-states
);
