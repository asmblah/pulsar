/* -------------------------------------------------------------------------- *\
    Base palettes

    Defines what value a specific named colour should be. Used in conjunction
    with _config.theme.scss to defined how specific Jadu control centre elements
    should be styled in regards to colour.
\* -------------------------------------------------------------------------- */

$palette-branding: (
    jadu-red: (
        darkest:     rgb(154, 23, 23),
        dark:        rgb(192, 28, 29),
        base:        rgb(218, 32, 33),
        light:       rgb(231, 58, 34)
    ),
    jadu-blue: (
        dark:        rgb(11, 137, 173),
        base:        rgb(21, 166, 209),
        light:       rgb(84, 190, 222),
        pale:        rgb(140, 208, 234)
    ),
    jadu-green: (
        dark:        rgb(107, 156, 47),
        base:        rgb(128, 186, 39),
        light:       rgb(164, 200, 88),
        pale:        rgb(189, 214, 134)
    ),
    jadu-teal: (
        dark:        rgb(69, 154, 140),
        base:        rgb(84, 185, 169),
        light:       rgb(134, 201, 191),
        pale:        rgb(140, 210, 202)
    ),
    jadu-pink: (
        dark:        rgb(183, 67, 95),
        base:        rgb(220, 81, 114),
        light:       rgb(224, 105, 133),
        pale:        rgb(239, 180, 195)
    )
);

$palette-monochromes: (
    white: ( base:   rgb(255, 255, 255) ),
    black: ( base:   rgb(30, 30, 30) ),
    gray:  (
        darker:      rgb(62, 62, 62),
        dark:        rgb(95, 95, 95),
        base:        rgb(126, 126, 126),
        light:       rgb(157, 157, 157),
        lighter:     rgb(190, 190, 190),
        lightest:    rgb(222, 222, 222),
        off-white:   rgb(236, 236, 236)
    )
);

/* -------------------------------------------------------------------------- *\
    Text and links
\* -------------------------------------------------------------------------- */

$palette-text: (
    text: (
        base:  map-get(map-get($palette-monochromes, gray), darker),
        light: map-get(map-get($palette-monochromes, gray), lighter)
    ),
    link: (
        base:  map-get(map-get($palette-branding, jadu-blue), darker),
        hover: map-get(map-get($palette-branding, jadu-blue), base),
        inverse: #ffffff,
        inverse-hover: darken(#ffffff, 10%)
    )
);

/* -------------------------------------------------------------------------- *\
    States

    The colour and its alternate MUST meet WCAG 2.0 AA compliance for contrast
\* -------------------------------------------------------------------------- */

$palette-states: (
    base: (
        base: map-get(map-get($palette-monochromes, gray), lighter),
        alt:  #000000
    ),
    primary: (
        base: map-get(map-get($palette-branding, jadu-blue), dark),
        alt:  #ffffff
    ),
    success:     (
        base: #297c46,
        alt:  #ffffff
    ),
    warning:     (
        base: #eaa96a,
        alt:  #000000
    ),
    danger:      (
        base: #c84d40,
        alt:  #ffffff
    ),
    info:        (
        base: map-get(map-get($palette-branding, jadu-blue), pale),
        alt:  #000000
    ),
    inverse:     (
        base: map-get(map-get($palette-monochromes, gray), darker),
        alt:  #ffffff
    )
);

/* -------------------------------------------------------------------------- *\
    Combined States

    Loop over this using:

    @each $state, $state-color, $state-color-alt in $state-colors { ... }
\* -------------------------------------------------------------------------- */

$state-colors:
    (base,      map-get(map-get($palette-states, base), base),    map-get(map-get($palette-states, base), alt)),
    (primary,   map-get(map-get($palette-states, primary), base), map-get(map-get($palette-states, primary), alt)),
    (success,   map-get(map-get($palette-states, success), base), map-get(map-get($palette-states, success), alt)),
    (warning,   map-get(map-get($palette-states, warning), base), map-get(map-get($palette-states, warning), alt)),
    (danger,    map-get(map-get($palette-states, danger), base),  map-get(map-get($palette-states, danger), alt)),
    (info,      map-get(map-get($palette-states, info), base),    map-get(map-get($palette-states, info), alt)),
    (inverse,   map-get(map-get($palette-states, inverse), base), map-get(map-get($palette-states, inverse), alt));

