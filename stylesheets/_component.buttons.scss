/**
 * -----------------------------------------------------------------------------
 *  _buttons.scss
 * -----------------------------------------------------------------------------
 *
 * Interface buttons can be links, buttons or submit inputs and can be used
 * anywhere in the UI for different needs.
 *
 * Example:
 *
 * <a class="button [button--modifier]" role="button" href="#">Button text</a>
 * <button class="button [button--modifier]" type="submit">Button text</button>
 * <input class="button [button--modifier]" type="submit" value="Button text">
 */

/**
 * Button constructor
 *
 * 1. Corrects inability to style clickable `input` types in iOS
 * 2. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 3. Inherit text color from ancestor.
 * 4. Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+.
 * 5. Prevent button text from being selectable.
 * 6. Prevent wrapping across multiple lines.
 * 7. Remove excess padding and border in Firefox 4+
 */

$btn-padding-top:    10px;
$btn-padding-bottom: 7px;
$btn-padding-x:      14px;

$btn-small-padding-x: 3px;
$btn-small-padding-y: 8px;

.btn {
    @include inline-block;
    -webkit-appearance: none; /* 1 */
    background: transparent;
    border: 0;
    border-radius: $border-radius;
    -moz-box-sizing: border-box;
    box-sizing: border-box; /* 2 */
    color: inherit; /* 3 */
    cursor: pointer;
    font-size: 14px;
    font-weight: normal;
    line-height: normal; /* 4 */
    margin: 0;
    padding: $btn-padding-top $btn-padding-x $btn-padding-bottom;
    position: relative;
    text-align: center;
    text-decoration: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    user-select: none; /* 5 */
    vertical-align: top;
    white-space: nowrap; /* 6 */

    &::-moz-focus-inner { /* 7 */
      border: 0;
      padding: 0;
    }
}

/**
 * Mixin to theme button states
 */

@mixin button-states($state) {
    $shadow-color: darken(color($state), 10);

    background-color: color($state);
    box-shadow: 0 2px 0 $shadow-color;
    color: color($state, alt) !important; // should be immutable
    position: relative;

    &:hover,
    &.is-hovered {
      box-shadow: 0 1px 0 $shadow-color;
      color: color($state, alt) !important;  // should be immutable
      top: 1px;
    }

    &:active,
    &.active {
        background-color: darken(color($state), 5);
        box-shadow: 0 0 0 $shadow-color;
        top: 2px;
    }

    &:disabled,
    &.is-disabled,
    &.disabled {
        background-color: color($state, light) !important;
        box-shadow: 0 2px 0 darken(color($state, light), 7) !important;
        color: pick_best_color(color($state, light), (#fff, color(gray, dark))) !important;

        &.btn--naked {
            color: color($state, light) !important;

            &:active,
            &.active {
                background-color: transparent !important;
                color: color($state, light) !important;
            }
        }
    }

    > .badge {
        background-color: color($state, dark);
        color: pick_best_color(color($state, dark), (#fff, color(gray, dark)));
        text-shadow: 0 -1px 0 rgba(0, 0, 0, .25);
    }

    &.btn--naked {
        color: color($state, dark) !important;

        &:active,
        &.active {
            background-color: color($state, light) !important;
            color: pick_best_color(color($state, light), (#fff, color(gray, dark))) !important;
        }
    }
}

/**
 * UI states
 */

.btn {
    @include button-states('base');
    border-bottom-style: solid;
    text-decoration: none;

    &:disabled,
    &.is-disabled,
    &.disabled {
        cursor: not-allowed !important;
    }
}

@each $state, $state-color, $state-color-alt in $state-colors {
    &.btn--#{$state} {
        @include button-states($state);
    }
}

.btn--small {
    font-size: .8em !important;
    padding: $btn-small-padding-y $btn-small-padding-x !important;
}

.btn--outline {
    background: none !important;
    border: 0;
    box-shadow: inset 0 0 0 2px color(base);
    padding-bottom: $btn-padding-bottom + 2;
    padding-top: $btn-padding-top;

    &:hover,
    &.is-hovered {
        box-shadow: inset 0 0 0 2px color(base);
        padding-bottom: $btn-padding-bottom + 1;
    }

    &:active,
    &.active {
        background-color: color(base, light) !important;
        box-shadow: inset 0 0 0 2px color(base);
        color: pick_best_color(color(base, light), (#fff, color(gray, dark))) !important;
        padding-bottom: $btn-padding-bottom;
        top: 2px;
    }

    &.is-disabled,
    &:disabled {
        background-color: transparent !important;
        box-shadow: inset 0 0 0 2px color(base) !important;
        color: color(text, disabled) !important;
    }

    @each $state, $state-color, $state-color-alt in $state-colors {
        &.btn--#{$state} {
            box-shadow: inset 0 0 0 2px $state-color !important;
            color: color($state, dark) !important;

            &:active,
            &.active {
                background-color: color($state, light) !important;
                color: pick_best_color(color($state, light), (#fff, color(gray, dark))) !important;
            }

            &.is-disabled,
            &:disabled {
                box-shadow: inset 0 0 0 2px color($state, light) !important;
                color: color($state, light) !important;

                &:active,
                &.active {
                    background-color: transparent !important;
                }
            }

            &.btn--naked {
                box-shadow: none !important;
            }
        }
    }

    &.btn--naked {
        box-shadow: none !important;
    }
}

.btn--naked,
.btn--naked > .btn {
    background: none;
    border: 0;
    box-shadow: none;
    color: color(text) !important;
    display: inline-block;
    line-height: auto;
    vertical-align: top;

    // IE8 fix btn--naked background and border
    @include ie-lte(8) {
        background: none;
        border: 0;
        box-shadow: none;
    }

    &:active,
    &.active,
    &:hover,
    &.is-hovered {
        box-shadow: none;
    }

    &.is-disabled,
    &:disabled {
        background: none !important;
        box-shadow: none !important;
        color: color(text, disabled) !important;
    }
}

.btn--naked.btn__group.open .dropdown__toggle {
    box-shadow: none;
}
