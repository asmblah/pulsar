{% extends "layout.html.twig" %}
{% import 'helpers/html.html.twig' as html %}
{% import 'helpers/form.html.twig' as form %}
{% import 'helpers/flash.html.twig' as flash %}

{% block title %}{{ parent() }}{% endblock %}

{% set heading = 'Pulsar Lexicon' %}
{% set active_tab = 1 %}

{% 
    set actions_menu = [
        html.link(html.icon('save') ~ ' Save'),
        html.link(html.icon('print') ~ ' Print'),
        html.divider(),
        html.link(html.icon('trash') ~ ' Delete', '#', 'link--danger')
    ]
%}

{% block tabs_list %}
    {{ 
        html.tabs([
            html.icon('font') ~ ' Typography',
            html.icon('plus-sign-alt') ~ ' Buttons/Labels/Badges',
            html.icon('check-sign') ~ ' Forms',
            html.icon('warning-sign') ~ ' Flash messages',
            html.icon('list-alt') ~ ' Modals',
            html.icon('quote-left') ~ ' Tooltips',
            html.icon('comment') ~ ' Popovers',
            html.icon('table') ~ ' Tables',
            html.icon('tasks') ~ ' Progress bars',
            html.icon('bar-chart') ~ ' Table with summary'
        ], active_tab)
    }}
{% endblock %}

{% set tab_typography %}
    {% include 'lexicon/tabs/typography.html.twig' %}
{% endset %}

{% set tab_buttons %}
    {% include 'lexicon/tabs/buttons_labels.html.twig' %}
{% endset %}

{% set tab_forms %}
    {% include 'lexicon/tabs/forms.html.twig' %}
{% endset %}

{% set tab_flash %}
    {% include 'lexicon/tabs/flash.html.twig' %}
{% endset %}

{% set tab_modals %}
    {% include 'lexicon/tabs/modals.html.twig' %}
{% endset %}

{% set tab_tooltips %}
    {% include 'lexicon/tabs/tooltips.html.twig' %}
{% endset %}

{% set tab_popovers %}
    {% include 'lexicon/tabs/popovers.html.twig' %}
{% endset %}

{% set tab_data_grid %}
    {% include 'lexicon/tabs/datagrid.html.twig' %}
{% endset %}

{% set tab_progress_bars %}
    {% include 'lexicon/tabs/progress_bars.html.twig' %}
{% endset %}

{% set tab_form_summary %}
    {% include 'lexicon/tabs/analytics.html.twig' %}
{% endset %}

{% block tabs_content %}
    {{ html.tabs_content([
      tab_typography, 
      tab_buttons, 
      tab_forms, 
      tab_flash, 
      tab_modals, 
      tab_tooltips, 
      tab_popovers, 
      tab_data_grid, 
      tab_progress_bars, 
      tab_form_summary
    ], active_tab) }}
{% endblock %}

{% block decks %}
<div class="deck" id="exampledeck">
  <div class="slide">
    <div class="slide-inner">
        <button class="close" data-dismiss="deck">×</button>
          {{ form.create() }}
          {{ form.fieldset_start('Deck Slide') }}

          {{ form.text('Text input', 'inputText', null, 'inputText', 'Placeholder') }}
          {{ form.checkbox('Checkbox with left label', 'inputCheckboxLeft', null, 'inputCheckboxLeft', true) }}
          {{ form.file('File input', 'inputFile', null, 'inputFile') }}
          {{ form.select('Select input', {value1: 'value one', value2: 'value two'}, 'inputSelect', null, 'inputSelect') }}
          {{ form.textarea('Textarea (4 rows)', 'inputTextarea4', null, 'inputTextarea4', 'Placeholder', null, 4) }}

          {{ form.fieldset_end() }}
          {{ 
            form.form_end([
              form.submit('Save', 'btn--primary')
            ]) 
          }}
    </div>
  </div>
  <div class="slide">
    <div class="slide-inner">
        <button class="close" data-dismiss="deck">×</button>
          {{ form.create() }}
          {{ form.fieldset_start('Deck Slide') }}

          {{ form.text('Text input', 'inputText', null, 'inputText', 'Placeholder') }}
          {{ form.checkbox('Checkbox with left label', 'inputCheckboxLeft', null, 'inputCheckboxLeft', true) }}
          {{ form.file('File input', 'inputFile', null, 'inputFile') }}
          {{ form.select('Select input', {value1: 'value one', value2: 'value two'}, 'inputSelect', null, 'inputSelect') }}
          {{ form.textarea('Textarea (4 rows)', 'inputTextarea4', null, 'inputTextarea4', 'Placeholder', null, 4) }}

          {{ form.fieldset_end() }}
          {{ 
            form.form_end([
              form.submit('Save', 'btn--primary')
            ]) 
          }}
    </div>
  </div>
</div>
{% endblock %}

{% block javascript %}
    $(document).ready(function() {
        $('#container').highcharts({
            chart: {
                type: 'areaspline',
                renderTo: 'chart'
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: ['Week 1', 'Week 2', 'Week 3', 'Week 4', 'Week 5', 'Week 6', 'Week 7', 'Week 8']
            },
            credits: {
                enabled: false
            },
            series: [{
                name: 'Email',
                data: [5, 8, 4, 9, 2, 6, 4, 8]
            }, {
                name: 'Twitter',
                data: [3, -2, -3, 2, -1, 3, -1, 6]
            }, {
                name: 'Facebook',
                data: [-2, 3, 6, -2, 6, -3, 2, 3]
            }]
        });
    });
    var width= $(window).width();

Highcharts.theme = {
   colors: [ "#DF5353", "#7798BF", "#7ac3b7"],
   chart: {
      backgroundColor: '#333',
      borderWidth: 0,
      borderRadius: 0,
      height: 300,
      marginTop: 22,
      plotBackgroundColor: null,
      plotShadow: false,
      plotBorderWidth: 0,
      width: width,
   },
   title: {
      style: {
         color: '#FFF',
         font: '16px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
      }
   },
   subtitle: {
      style: {
         color: '#DDD',
         font: '12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
      }
   },
   xAxis: {
      gridLineWidth: 0,
      lineColor: '#999',
      startOnTick: true,
      tickColor: '#999',
      tickPosition: 'inside',
      tickPositions: [0,1,2,3,4,5, 6, 7, 8],
      tickmarkPlacement: 'on',
      labels: {
         style: {
            color: '#999',
            fontWeight: 'bold'
         }
      },
      title: {
         style: {
            color: '#AAA',
            font: 'bold 12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
         }
      },

   },
   yAxis: {
      alternateGridColor: null,
      minorTickInterval: null,
      gridLineColor: 'rgba(255, 255, 255, .1)',
      min: -3,
      max: 10,
      minorGridLineColor: 'rgba(255,255,255,0.07)',
      lineWidth: 0,
      tickWidth: 0,
      labels: {
         style: {
            color: '#999',
            fontWeight: 'bold'
         }
      },
      title: {
         style: {
            color: '#AAA',
            font: 'bold 12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
         }
      }
   },
   legend: {
      itemStyle: {
         color: '#CCC'
      },
      itemHoverStyle: {
         color: '#FFF'
      },
      itemHiddenStyle: {
         color: '#333'
      }
   },
   labels: {
      style: {
         color: '#CCC'
      }
   },
   tooltip: {
      backgroundColor: {
         linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
         stops: [
            [0, 'rgba(96, 96, 96, .8)'],
            [1, 'rgba(16, 16, 16, .8)']
         ]
      },
      borderWidth: 0,
      style: {
         color: '#FFF'
      }
   },


   plotOptions: {
      series: {
         shadow: true
      },
      line: {
         dataLabels: {
            color: '#CCC'
         },
         marker: {
            lineColor: '#333'
         }
      },
      spline: {
         marker: {
            lineColor: '#333'
         }
      },
      scatter: {
         marker: {
            lineColor: '#333'
         }
      },
      candlestick: {
         lineColor: 'white'
      }
   },

   toolbar: {
      itemStyle: {
         color: '#CCC'
      }
   },

   navigation: {
      buttonOptions: {
         symbolStroke: '#DDDDDD',
         hoverSymbolStroke: '#FFFFFF',
         theme: {
            fill: {
               linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
               stops: [
                  [0.4, '#606060'],
                  [0.6, '#333333']
               ]
            },
            stroke: '#000000'
         }
      }
   },

   // scroll charts
   rangeSelector: {
      buttonTheme: {
         fill: {
            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
            stops: [
               [0.4, '#888'],
               [0.6, '#555']
            ]
         },
         stroke: '#000000',
         style: {
            color: '#CCC',
            fontWeight: 'bold'
         },
         states: {
            hover: {
               fill: {
                  linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                  stops: [
                     [0.4, '#BBB'],
                     [0.6, '#888']
                  ]
               },
               stroke: '#000000',
               style: {
                  color: 'white'
               }
            },
            select: {
               fill: {
                  linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                  stops: [
                     [0.1, '#000'],
                     [0.3, '#333']
                  ]
               },
               stroke: '#000000',
               style: {
                  color: 'yellow'
               }
            }
         }
      },
      inputStyle: {
         backgroundColor: '#333',
         color: 'silver'
      },
      labelStyle: {
         color: 'silver'
      }
   },

   navigator: {
      handles: {
         backgroundColor: '#666',
         borderColor: '#AAA'
      },
      outlineColor: '#CCC',
      maskFill: 'rgba(16, 16, 16, 0.5)',
      series: {
         color: '#7798BF',
         lineColor: '#A6C7ED'
      }
   },

   scrollbar: {
      barBackgroundColor: {
            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
            stops: [
               [0.4, '#888'],
               [0.6, '#555']
            ]
         },
      barBorderColor: '#CCC',
      buttonArrowColor: '#CCC',
      buttonBackgroundColor: {
            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
            stops: [
               [0.4, '#888'],
               [0.6, '#555']
            ]
         },
      buttonBorderColor: '#CCC',
      rifleColor: '#FFF',
      trackBackgroundColor: {
         linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
         stops: [
            [0, '#000'],
            [1, '#333']
         ]
      },
      trackBorderColor: '#666'
   },


   // special colors for some of the demo examples
   legendBackgroundColor: 'rgba(48, 48, 48, 0.8)',
   legendBackgroundColorSolid: 'rgb(70, 70, 70)',
   dataLabelsColor: '#444',
   textColor: '#E0E0E0',
   maskColor: 'rgba(255,255,255,0.3)'
};

// Apply the theme
var highchartsOptions = Highcharts.setOptions(Highcharts.theme);
{% endblock %}