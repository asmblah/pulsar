{# -----------------------------------------------------------------------------

# Checkbox

Generates a checkbox input field.

## Example usage

```twig
{{
	form.checkbox({
		'label': 'Are you awesome?'
	})
}}
```

## Options applied to parent wrapper

Option        | Type   | Description
------------- | ------ | -------------------------------------------------------
class         | string | A space separated list of class names
help          | string | Additional guidance information to be displayed next to the input
label         | string | Text for the `<label>` companion element

## Options applied to input

Option        | Type   | Description
------------- | ------ | -------------------------------------------------------
checked       | bool   | Whether the input is checked
data          | hash   | Data attributes by key/value
form          | string | Specific one or more forms this label belongs to
id            | string | A unique identifier, if required
indeterminate | bool   | Shows the checkbox as [-], overrides the value of `checked`
name          | string | The name of this control
value         | string | Specifies the value of the input

#}
{% macro checkbox(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{{
		_self.group({
			'parent': options|only('class help id label'),
			'inputs': [
				elem.input(
					options|exclude('class help label')
				)
			]
		})
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Checkbox inline

Creates a `<label>` element with a checkbox inside it and allows the checkbox to
be positioned either before or after the label value.

### Example usage

	{{
		form.checkbox_inline({
			'id': 'areYouAwesome',
			'label': 'Are you awesome?',
			'name': 'areYouAwesome'
		})
	}}

### Options applied to parent wrapper

Option          | Type   | Description
--------------- | ------ | -----------------------------------------------------
class           | string | A space separated list of class names
help            | string | Additional guidance information to be displayed next to the input

### Options applied to input

Option          | Type   | Description
--------------- | ------ | -----------------------------------------------------
checked         | bool   | Whether the input is checked
data            | hash   | Data attributes by key/value
form            | string | Specific one or more forms this label belongs to
id              | string | A unique identifier, if required
indeterminate   | bool   | Shows the checkbox as [-], overrides the value of `checked`
input_placement | string | left (default)|right position of the input vs the label value
label           | string | Text for the `<label>` companion element
name            | string | The name of this control
value           | string | Specifies the value of the input

#}
{% macro checkbox_inline(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{%
		set input = elem.input(options|merge({
			'label': null,
			'type': 'checkbox'
		}))
	%}

	{% set label = input ~ options.label %}

	{%
		if options.input_placement is defined
		and options.input_placement == 'right'
	%}
		{% set label = options.label ~ input %}
	{% endif %}

	{%
		set options = options|merge({
			'class': 'checkbox--inline-v2',
			'label': label,
			'type': 'checkbox'
		})
	%}

	{{
		_self.group({
			'parent': options|only('class help id'),
			'inputs': [
				elem.input(
					options|exclude('class help label')
				)
			]
		})
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Create

Creates the opening <form> element.

### Example usage

	{{ form.create() }}

### Options

Option  | Type   | Description
------- | ------ | -------------------------------------------------------------
action  | string | URL to post to, will submit to self if empty
class   | string | A space separated list of class names
data    | hash   | Data attributes by key/value
enctype | string | How the form-data should be encoded (requires method = POST)
id      | string | A unique identifier, if required
name    | string | The name of the form
method  | string | The HTTP method to be used to submit the form

#}
{% macro create(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}

	{% set defaults = {'class': 'form--horizontal form-v2' } %}

	{%
		if options.action is defined
		and options.action is not empty
	%}
		{% set defaults = defaults|merge({'action': options.action}) %}
	{% endif %}
	{%
		if options.method is defined
		and options.method is not empty
	%}
		{% set defaults = defaults|merge({'method': options.method|default('POST')}) %}
	{% endif %}
	{%
		if options.enctype is defined
		and options.enctype is not empty
		and options.method == 'POST'
	%}
		{% set defaults = defaults|merge({'enctype': options.enctype|default('application/x-www-form-urlencoded')}) %}
	{% endif %}

	<form
		{{ attributes(options|defaults(defaults)) }}
	>

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

# Date

Generates a text input field which will show a date picker when focused.

## Example usage

```twig
{{
	form.date({
		'label': 'When is your birthday?'
	})
}}
```

## Options applied to parent wrapper

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
class       | string | A space separated list of class names
help        | string | Additional guidance information to be displayed next to the input
label       | string | Text for the `<label>` companion element

## Options applied to input

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
autofocus   | bool   | Whether the field should have input focus on page load
disabled    | bool   | Stops the element from being interactive if true
form        | string | Specific one or more forms this label belongs to
id          | string | A unique identifier, if required
name        | string | The name of this control
placeholder | string | A short hint that describes the expected value
value       | string | Specifies the value of the input
data-*      | string | Data attributes, eg: `'data-foo': 'bar'`
*Any other options not listed here will be applied to the input

#}
{% macro date(options = {}) %}
{% spaceless %}

	{%
		set options = options|merge({
			'placeholder': options.placeholder|default('dd/mm/yyyy'),
			'data-datepicker': 'true'
		})
	%}

	{{ _self.text(options) }}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## End

Ends a form and allows you to specify the buttons required to submit/cancel the
form.

### Example usage

	{{
		form.end({
			'actions': [
				form.submit({
					'label': 'Sign In'
				}),
				html.link({
					'label': 'Cancel',
					'href': '/home'
				})
			]
		})
	}}

### Options

Option  | Type   | Description
------- | ------ | -------------------------------------------------------------
actions | array  | Helpers to display as the actions, usually form.submit() but can be buttons, links etc...
class   | string | A space separated list of class names

#}
{% macro end(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}

	{% if options.actions is defined %}
		<div
			{{
				attributes(options
					|exclude('actions')
					|defaults({
						'class': 'form__actions'
					})
				)
			}}
		>
			{% for action in options.actions %}
				{{- action -}}
			{% endfor %}
		</div>
	{% endif %}
	</form>

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Fieldset start

Opens a `<fieldset>` and allows you to define an optional `<legend>`.

### Example usage

	{{
		form.fieldset_start({
			'legend': 'I am Legend'
		})
	}}

### Options

Option  | Type   | Description
------- | ------ | -------------------------------------------------------------
class   | string | A space separated list of class names
data    | hash   | Data attributes by key/value
form    | string | Specific one or more forms the fieldset belongs to
id      | string | A unique identifier, if required
legend  | string | Label for the optional legend element
name    | string | The name of this control

#}
{% macro fieldset_start(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}

	<fieldset
		{{ attributes(options|exclude('legend')) }}
	>
	{%
		if options.legend is defined
		and options.legend is not empty
	%}
		<legend>{{ options.legend|raw }}</legend>
	{% endif %}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Fieldset end

Closes a `<fieldset>`.

### Example usage

	{{ form.fieldset_start() }}

#}
{% macro fieldset_end() %}
{% spaceless %}

	</fieldset>

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## File

Generates a file input and passes it to the `group` helper to wrap it in the
required form markup.

### Example usage

	{{
		form.file({
			'label': 'Send us a pretty picture'
		})
	}}

### Options applied to parent wrapper

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
class       | string | A space separated list of class names
help        | string | Additional guidance information to be displayed next to the input
label       | string  | Text for the `<label>` companion element

### Options applied to input

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
autofocus   | bool   | Whether the field should have input focus on page load
data        | hash   | Data attributes by key/value
disabled    | bool   | Stops the element from being interactive if true
form        | string | Specific one or more forms this label belongs to
id          | string | A unique identifier, if required
name        | string | The name of this control
placeholder | string | A short hint that describes the expected value
value       | string | Specifies the value of the input

#}
{% macro file(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{% set options = options|merge({ 'type': options.type|default('file') }) %}

	{{
		_self.group({
			'parent': options|only('class help id label'),
			'inputs': [
				elem.input(
					options|exclude('class help label')
				)
			]
		})
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Group

This is a constructor macro which generates an input field wrapped with standard
markup with the ability to prepend/append extra elements. It is called by other
macros like form.text and form.password, it is not intended to be called
directly from a view.

### Example usage

	{{
		form.group({
			'label': 'What is the meaning of life?'
		})
	}}

### Options applied to the parent wrapper

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
append      | string | Content to display after the input, usually short text or icons
class       | string | A space separated list of class names
data        | hash   | Data attributes by key/value
id          | string | A unique identifier, if required
help        | string | Additional guidance information to be displayed next to the input
inputs      | array  | One or more form inputs to display
label       | string | Text for the `<label>` companion element
prepend     | string | Content to display before the input, usually short text or icons
removable   | bool   | Whether to display a remove button after the input (default false)

#}
{% macro group(options = {}) %}

	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}
	{% import '@pulsar/pulsar/v2/helpers/html.html.twig' as html %}

	{% if options.parent.label is defined and options.parent.label is null %}
		{% set hasLabelClass = ' form__group--no-label' %}
	{% endif %}

	<div {{
		attributes(options.parent
				|only('class id')
				|defaults({
					'class': 'form__group' ~ hasLabelClass|default
				})
			)
	-}}>
		{{
			elem.label({
				'for': options.parent.id|default,
				'label': options.parent.label|default
			})
		}}
		<div class="controls">

		{%
			if (
				options.parent.prepend is defined
				and options.parent.prepend is not empty
			) or (
				options.parent.append is defined
				and options.parent.append is not empty
			)
		%}
			<div class="input-group">
				{{ util.addon(options.parent.prepend|default) }}
		{% elseif options.parent.removable is defined and options.parent.removable == true %}
			<div class="input-group is-removable">
		{% endif %}

		{% for input in options.inputs %}
				{{- input|raw -}}
		{% endfor %}

		{%
			if (
				options.parent.prepend is defined
				and options.parent.prepend is not empty
			) or (
				options.parent.append is defined
				and options.parent.append is not empty
			)
		%}
				{{ util.addon(append|default) }}
			</div>
		{% endif %}

		{% if options.parent.removable is defined and options.parent.removable == true %}
				{{ html.remove_button({ 'target': options.parent.id|default }) }}
			</div>
		{% endif %}

			{{ _self.help({ 'value': options.parent.help|default }) }}
		</div>
	</div>

{% endmacro %}


{# -----------------------------------------------------------------------------

## Help

Additional guidance text to be displayed with a form control, normally called by
the `form.group()` helper and not really intended to be called directly from a
view.

### Example usage

	{{
		form.help({
			'value': 'Your password'
		})
	}}

### Options

Option | Type   | Description
------ | ------ | ---------------------------------------------------------
value  | string | The string / markup to render inside the help block

#}
{% macro help(options = {}) %}
{% spaceless %}

	{% if options.value is defined and options.value is not empty %}
	    <p class="help-block">
	    	{{- options.value|raw -}}
	    </p>
    {% endif %}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Password

Generates a password input field.

### Example usage

	{{
		form.password({
			'label': 'Your password'
		})
	}}

### Options

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
autofocus   | bool   | Whether the field should have input focus on page load
class       | string | A space separated list of class names
data        | hash   | Data attributes by key/value
disabled    | bool   | Stops the element from being interactive if true
form        | string | Specific one or more forms this label belongs to
id          | string | A unique identifier, if required
help        | string | Additional guidance information to be displayed next to the input
label       | string | Text for the `<label>` companion element
name        | string | The name of this control
placeholder | string | A short hint that describes the expected value
value       | string | Specifies the value of the input

#}
{% macro password(options = {}) %}

	{% set options = options|merge({ 'type': options.type|default('password') }) %}

	{{ _self.text(options) }}

{% endmacro %}


{# -----------------------------------------------------------------------------

## Radio

Generates a radio input field.

### Example usage

	{{
		form.radio({
			'label': 'GaGa'
		})
	}}

### Options applied to parent wrapper

Option   | Type   | Description
-------- | ------ | ------------------------------------------------------------
class    | string | A space separated list of class names
help     | string | Additional guidance information to be displayed next to the input
label    | string  | Text for the `<label>` companion element

### Options applied to input

Option   | Type   | Description
-------- | ------ | ------------------------------------------------------------
data     | hash   | Data attributes by key/value
form     | string | Specific one or more forms this label belongs to
id       | string | A unique identifier, if required
name     | string | The name of this control
selected | bool   | Whether the input is checked
value    | string | Specifies the value of the input

#}
{% macro radio(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{% set options = options|merge({ 'type': options.type|default('radio') }) %}

	{{
		_self.group({
			'parent': options|only('class help id label'),
			'inputs': [
				elem.input(options
					|exclude('class help label')
				)
			]
		})
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Radio inline

Creates a `<label>` element with a radio input inside it and allows the radio to
be positioned either before or after the label value.

### Example usage

	{{
		form.radio_inline({
			'id': 'areYouAwesome',
			'label': 'Are you awesome?',
			'name': 'areYouAwesome'
		})
	}}

### Options applied to parent wrapper

Option          | Type   | Description
--------------- | ------ | -----------------------------------------------------
class           | string | A space separated list of class names
help            | string | Additional guidance information to be displayed next to the input

### Options applied to input

Option          | Type   | Description
--------------- | ------ | -----------------------------------------------------
data            | hash   | Data attributes by key/value
form            | string | Specific one or more forms this label belongs to
id              | string | A unique identifier, if required
label           | string | Text for the `<label>` companion element
input_placement | string | left (default)|right position of the input vs the label value
name            | string | The name of this control
selected        | bool   | Whether this radio button should be selected
value           | string | Specifies the value of the input

#}
{% macro radio_inline(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{%
		set input = elem.input(options|merge({
				'label': null,
				'type': 'radio'
			})
		)
	%}

	{% set label = input ~ options.label %}

	{%
		if options.input_placement is defined
		and options.input_placement == 'right'
	%}
		{% set label = options.label ~ input %}
	{% endif %}

	{{
		_self.group({
			'parent': options|only('class help'),
			'inputs': [
				elem.label({
					'class': 'radio--inline-v2',
					'for': options.id|default,
					'label': label
				})
			]
		})
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Select

Generates a select input and passes it to the `group` helper to wrap it in the
required form markup.

### Example usage

	{{
		form.select({
			'label': 'What’s your favourite colour?',
			'options': {
				'': 'Choose',
				'colour_red': 'Red',
				'colour_blue': 'Blue'
			}
		})
	}}

### Options applied to parent wrapper

Option      | Type    | Description
----------- | ------- | --------------------------------------------------------
class       | string  | A space separated list of class names
help        | string  | Additional guidance information to be displayed next to the input
label       | string  | Text for the `<label>` companion element

### Options applied to the input

Option      | Type    | Description
----------- | ------- | --------------------------------------------------------
data        | hash    | Data attributes by key/value
form        | string  | Specific one or more forms this label belongs to
id          | string  | A unique identifier, if required
multiple    | boolean | Whether multiple options can be selected
name        | string  | The name of this control
options     | hash    | The <option> attributes formatted as { 'value': 'label' }
selected    | string  | The `id` of the item in `options` that should be initially selected
size        | int     | The number of items to display when the list is shown

#}
{% macro select(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{{
		_self.group({
			'parent': options|only('class help id'),
			'inputs': [
				elem.select(
					options|exclude('class help label')
				)
			]
		})
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Submit

Creates your standard form submit button. Accepts all the same arguments as the
`html.button()` helper.

### Example usage

	{{
		form.submit({
			'label': 'GO GO GO!'
		})
	}}

### Options

Option   | Type  | Description
-------- | ----- | -------------------------------------------------------------
class   | string | A space separated list of class names
data    | hash   | Data attributes by key/value
form    | string | Specifies one or more forms this label belongs to
href    | string | URL to use for link button types
id      | string | A unique identifier, if required
name    | string | The name of this control
label   | string | The button label
type    | string | Can be button (default), link, input, submit

#}
{% macro submit(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/html.html.twig' as html %}

	{{
		html.button(options|merge({
			'type': 'submit'
		}))
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

# Text

Generates a text input and passes it to the `group` helper to wrap it in the
required form markup.

## Example usage

	{{
		form.text({
			'label': 'What’s your name, boss?'
		})
	}}

## Options applied to parent wrapper

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
class       | string | A space separated list of class names
help        | string | Additional guidance information to be displayed next to the input
label       | string | Text for the `<label>` companion element

## Options applied to input

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
autofocus   | bool   | Whether the field should have input focus on page load
disabled    | bool   | Stops the element from being interactive if true
form        | string | Specific one or more forms this label belongs to
id          | string | A unique identifier, if required
name        | string | The name of this control
placeholder | string | A short hint that describes the expected value
value       | string | Specifies the value of the input
data-*      | string | Data attributes, eg: `'data-foo': 'bar'`
*Any other options not listed here will be applied to the input

#}
{% macro text(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{% set options = options|merge({ 'type': options.type|default('text') }) %}

	{{
		_self.group({
			'parent': options|only('class help id label'),
			'inputs': [
				elem.input(
					options|exclude('class help label')
				)
			]
		})
	}}

{% endspaceless %}
{% endmacro %}


{# -----------------------------------------------------------------------------

## Textarea

Generates a text input and passes it to the `group` helper to wrap it in the
required form markup.

### Example usage

	{{
		form.textarea({
			'label': 'What is the meaning of life?'
		})
	}}

### Options applied to parent wrapper

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
class       | string | A space separated list of class names
help        | string | Additional guidance information to be displayed next to the input
label       | string | Text for the `<label>` companion element

### Options applied to input

Option      | Type    | Description
----------- | ------- | --------------------------------------------------------
autofocus   | bool    | Whether the field should have input focus on page load
data        | hash    | Data attributes by key/value
form        | string  | Specific one or more forms this label belongs to
id          | string  | A unique identifier, if required
name        | string  | The name of this control
placeholder | string  | A short hint that describes the expected value
rows        | integer | The height, in rows (default 2)
value       | string  | Specifies the value of the input

#}
{% macro textarea(options = {}) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/elem.html.twig' as elem %}

	{{
		_self.group({
			'parent': options|only('class help id'),
			'inputs': [
				elem.textarea(
					options|exclude('class help label')
				)
			]
		})
	}}

{% endspaceless %}
{% endmacro %}
