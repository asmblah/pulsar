{#  ----------------------------------------------------------------------------

## Input

A standard input field, accepts a `type` attribute to switch between:

 * File
 * Password
 * Text (default)

### Example usage

	{{
		elem.input({
			'name': 'MyAwesomeField'
		})
	}}

### Options

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
autofocus   | bool   | Whether the field should have input focus on page load
class       | string | A space separated list of class names
data        | hash   | Data attributes by key/value
disabled    | bool   | Stops the element from being interactive if true
id          | string | A unique identifier, if required
form        | string | Specific one or more forms this label belongs to
naked       | bool   | If true, removes all presentational markup and classes
name        | string | The name of this control
placeholder | string | A short hint that describes the expected value
type        | string | Defines the type of input to render (default text)
value       | string | Specifies the value of the input

#}
{% macro input(options) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}

	{% if options.naked is not defined or options.naked != true %}
		{% set options = options|defaults({'class': 'form__control'}) %}
	{% endif %}

	<input {{ attributes(options|exclude('naked')) }} />

{% endspaceless %}
{% endmacro %}


{#  ----------------------------------------------------------------------------

## Label

Generates a `<label>` element to accompany an input

### Example usage

    {{
        elem.label({
            'for': 'myInput'
        })
    }}

### Options

Option  | Type   | Description
------- | ------ | -------------------------------------------------------------
class   | string | A space separated list of class names
data    | hash   | Data attributes by key/value
for     | string | Specific which form element this label is bound to
form    | string | Specific one or more forms this label belongs to
id      | string | A unique identifier, if required
name    | string | The name of this control

#}
{% macro label(options) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}

	{% if options.label is not empty %}
		<label
			{{
				attributes(options
					|exclude('label')
					|defaults({
						'class': 'control__label'
					})
				)
			}}
		>
			{{- options.label|raw -}}
		</label>
	{% endif %}

{% endspaceless %}
{% endmacro %}


{#  ----------------------------------------------------------------------------

## Select

A standard select field

### Example usage

	{{
		elem.select({
			'name': 'MyAwesomeField'
		})
	}}

### Options

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
class       | string | A space separated list of class names
data        | hash   | Data attributes by key/value
form        | string | Specific one or more forms this label belongs to
id          | string | A unique identifier, if required
options     | hash   | Hash of <option> elements by { 'value': 'label' }
name        | string | The name of this control
placeholder | string | A short hint that describes the expected value
selected    | string | The `value` to have as the selected option
type        | string | Defines the type of input to render (default text)
value       | string | Specifies the value of the input

#}
{% macro select(options) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}

	<select {{
		attributes(options
			|exclude('label selected value options')
			|defaults({
				'class': 'form__control'
			})
		)
	}}>

	{% for value, label in options.options %}
		<option {{ util.value(value) }}
			{%- if options.selected is defined and value == options.selected -%}
				selected
			{%- endif -%}>
			{{- label -}}
		</option>
	{% endfor %}

	</select>

{% endspaceless %}
{% endmacro %}


{#  ----------------------------------------------------------------------------

## Select2

A select field which uses the select2 plugin to extend functionality

### Example usage

	{{
		elem.select2({
			'name': 'MyAwesomeField'
		})
	}}

### Options

Option      | Type   | Description
----------- | ------ | ---------------------------------------------------------
class       | string | A space separated list of class names
data        | hash   | Data attributes by key/value
form        | string | Specific one or more forms this label belongs to
id          | string | A unique identifier, if required
options     | hash   | Hash of <option> elements by { 'value': 'label' }
name        | string | The name of this control
placeholder | string | A short hint that describes the expected value
selected    | string | The `value` to have as the selected option
type        | string | Defines the type of input to render (default text)
value       | string | Specifies the value of the input

#}
{% macro select2(options) %}
{% spaceless %}

	{{ _self.select(options|merge({'class': 'js-select2'})) }}

{% endspaceless %}
{% endmacro %}


{#  ----------------------------------------------------------------------------

## Textarea

A standard texarea field.

### Example usage

	{{
		elem.textarea({
			'name': 'MyAwesomeField'
		})
	}}

### Options

Option      | Type    | Description
----------- | ------- | --------------------------------------------------------
class       | string  | A space separated list of class names
data        | hash    | Data attributes by key/value
form        | string  | Specific one or more forms this label belongs to
id          | string  | A unique identifier, if required
name        | string  | The name of this control
placeholder | string  | A short hint that describes the expected value
rows        | integer | The height, in rows
value       | string  | Specifies the value of the input

#}
{% macro textarea(options) %}
{% spaceless %}
	{% import '@pulsar/pulsar/v2/helpers/util.html.twig' as util %}

	<textarea
		{{
			attributes(options
				|exclude('value')
				|defaults({
					'class': 'form__control'
				})
			)
		}}
	>
	{%-
		if options.value is defined
		and options.value is not empty
	-%}
		{{- options.value -}}
	{%- endif -%}
	</textarea>

{% endspaceless %}
{% endmacro %}
